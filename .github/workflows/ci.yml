name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types:
      - synchronize
      - review_requested
      - review_request_removed
      - ready_for_review
  pull_request_review:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  cleanup:
    if: ${{ (github.repository == 'parallel-finance/parallel')
    runs-on: self-hosted
    steps:
      - name: cleaning up
        run: |
          sudo chown -R $USER:$USER $GITHUB_WORKSPACE
  check:
    if: ${{ (github.repository == 'parallel-finance/parallel') && (github.event.review.state == 'approved') }}
    name: Auto Build CI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [self-hosted]
        rust: [nightly-2022-04-24]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Node@14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org

      - name: Install Rust toolchain ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
          override: true

      - name: Install wasm32-unknown-unknown for ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: wasm32-unknown-unknown
          override: true

      # Work around https://github.com/actions/cache/issues/403 by using GNU tar
      # instead of BSD tar.
      - name: Install GNU tar
        if: matrix.os == 'macOS-latest'
        run: |
          brew install gnu-tar
          echo PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH" >> $GITHUB_ENV

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.os }}-${{ matrix.rust }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}-${{ secrets.CACHE_VERSION }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ matrix.os }}-${{ matrix.rust }}-cargo-index-${{ hashFiles('**/Cargo.toml') }}-${{ secrets.CACHE_VERSION }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ matrix.os }}-${{ matrix.rust }}-cargo-build-target-${{ hashFiles('**/Cargo.toml') }}-${{ secrets.CACHE_VERSION }}

      - name: Check Build
        run: |
          make check
          make check-wasm
          make check-helper

      - name: Check Clippy Warnings
        run: |
          make lint

      - name: Check Test
        run: |
          make test

      - name: Check Integration Test
        run: |
          make integration-test
