name: Extrinsic Ordering Check
on:
  workflow_dispatch:
    inputs:
      reference_url:
        description: The WebSocket url of the reference node
        default: wss://heiko-rpc.parallel.fi
        required: true
      chain:
        description: The name of the chain under test. Usually, you would pass a local chain
        default: heiko-dev
        required: true

jobs:
  start-runner:
    name: start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.PAT_RUNNER }}
          ec2-image-id: ${{ secrets.EC2_IMAGE_ID_CI }}
          ec2-instance-type: ${{ secrets.EC2_INSTANCE_TYPE }}
          subnet-id: ${{ secrets.SUBNET_ID }}
          security-group-id: ${{ secrets.SECURITY_GROUP_ID }}
          aws-resource-tags: >
            [
              {"Key": "Name", "Value": "${{ github.workflow }}"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
            ]
  check:
    if: github.repository == 'parallel-finance/parallel'
    name: Run check
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}
    env:
      CHAIN: ${{github.event.inputs.chain}}
      REF_URL: ${{github.event.inputs.reference_url}}

    steps:
      - name: cleaning up
        run: |
          echo '${{ secrets.RUNNER_PASSWORD }}' | sudo -S chown -R $USER:$USER $GITHUB_WORKSPACE
          echo "HOME=/home/ubuntu" >> ${GITHUB_ENV}
          apt update -y && apt install git-lfs -y
          df -hT
      - name: Install Dependencies
        run: | 
          echo "update apt packge ..."
          sudo apt update -y
          sudo apt install apt-transport-https curl ca-certificates software-properties-common -y
          echo "add apt-get nodejs16.x and PGP"
          curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
          echo "install nodejs and npm...."
          sudo apt-get install -y nodejs
          node -v && npm -v
          npm install --global yarn
          yarn --version
          sudo apt install build-essential make cmake -y
          a
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-11-15
          components: rustfmt, clippy
          override: true

      - name: Install wasm32-unknown-unknown
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-15
          target: wasm32-unknown-unknown
          override: true
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - name: Build binary
        run: |
          cargo build --workspace --exclude runtime-integration-tests --release --bin parallel
          ./target/release/parallel --version

      - name: Start local node
        run: |
          echo Running on $CHAIN
          ./target/release/parallel --chain=$CHAIN &

      - name: Prepare output
        run: |
          VERSION=$(./target/release/parallel --version)
          echo "Metadata comparison:" >> output.txt
          echo "Date: $(date)" >> output.txt
          echo "Reference: $REF_URL" >> output.txt
          echo "Target version: $VERSION" >> output.txt
          echo "Chain: $CHAIN" >> output.txt
          echo "----------------------------------------------------------------------" >> output.txt

      - name: Pull polkadot-js-tools image
        run: docker pull jacogr/polkadot-js-tools

      - name: Compare the metadata
        run: |
          CMD="docker run --pull always --network host jacogr/polkadot-js-tools metadata $REF_URL ws://localhost:9944"
          echo -e "Running:\n$CMD"
          $CMD >> output.txt
          sed -z -i 's/\n\n/\n/g' output.txt
          cat output.txt | egrep -n -i ''
          SUMMARY=$(./scripts/ci/extrinsic-ordering-filter.sh output.txt)
          echo -e $SUMMARY
          echo -e $SUMMARY >> output.txt

      - name: Show result
        run: |
          cat output.txt

      - name: Stop our local node
        run: pkill parallel

      - name: Save output as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CHAIN }}
          path: |
            output.txt
  stop-runner:
    name: stop self-hosted EC2 runner
    needs:
      - start-runner
      - check
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.PAT_RUNNER }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
