
//! Autogenerated weights for pallet_membership
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-08-04, STEPS: `[50, ]`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("heiko"), DB CACHE: 128

// Executed Command:
// ./target/release/parallel
// benchmark
// --chain=heiko
// --execution=wasm
// --wasm-execution=compiled
// --pallet=pallet_membership
// --extrinsic=*
// --steps=50
// --repeat=20
// --raw
// --output=./runtime/heiko/src/weights//pallet_membership.rs


#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for pallet_membership.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_membership::WeightInfo for WeightInfo<T> {
	fn add_member(m: u32, ) -> Weight {
		(33_081_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((179_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn remove_member(m: u32, ) -> Weight {
		(39_404_000 as Weight)
			// Standard Error: 0
			.saturating_add((159_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn swap_member(m: u32, ) -> Weight {
		(39_455_000 as Weight)
			// Standard Error: 0
			.saturating_add((180_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn reset_member(m: u32, ) -> Weight {
		(40_454_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((400_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn change_key(m: u32, ) -> Weight {
		(41_765_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((173_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	fn set_prime(m: u32, ) -> Weight {
		(10_409_000 as Weight)
			// Standard Error: 0
			.saturating_add((121_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn clear_prime(_m: u32, ) -> Weight {
		(4_583_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}
