[package]
authors     = { workspace = true }
build       = 'build.rs'
description = 'A decentralized lending protocol which allow users to earn "double interests" from staking and lending'
edition     = '2021'
homepage    = 'https://parallel.fi'
license     = 'Apache'
name        = 'parallel'
repository  = { workspace = true }
version     = { workspace = true }

[package.metadata.docs.rs]
targets = ['x86_64-unknown-linux-gnu']

[dependencies]
codec                  = { workspace = true, features = ["std"] }
derive_more            = { workspace = true }
frame-benchmarking     = { workspace = true, features = ["std"] }
frame-benchmarking-cli = { workspace = true }
hex-literal            = { workspace = true }
jsonrpsee              = { workspace = true, features = ["server", "macros"] }
log                    = { workspace = true }
futures                = { workspace = true, features = ["compat"] }
async-trait            = { workspace = true }

primitives = { workspace = true, features = ["std"] }

pallet-loans-rpc                           = { workspace = true }
pallet-router-rpc                          = { workspace = true }
pallet-transaction-payment-rpc             = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true, features = ["std"] }

# runtimes
heiko-runtime                              = { workspace = true }
parallel-runtime                           = { workspace = true }
kerria-runtime                             = { workspace = true }
vanilla-runtime                            = { workspace = true }

sc-basic-authorship     = { workspace = true }
sc-chain-spec           = { workspace = true }
sc-cli                  = { workspace = true }
sc-client-api           = { workspace = true }
sc-consensus            = { workspace = true }
sc-executor             = { workspace = true }
sc-keystore             = { workspace = true }
sc-rpc                  = { workspace = true }
sc-rpc-api              = { workspace = true }
sc-service              = { workspace = true }
sc-telemetry            = { workspace = true }
sc-tracing              = { workspace = true }
sc-transaction-pool     = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sc-network              = { workspace = true }
sc-network-common       = { workspace = true }
sc-consensus-aura       = { workspace = true }
sc-consensus-manual-seal = { workspace = true }

frame-system-rpc-runtime-api = { workspace = true, features = ["std"] }
try-runtime-cli              = { workspace = true, optional = true }

clap         = { workspace = true, features = ['derive'] }
serde        = { workspace = true, features = ['derive'] }
serde_json   = { workspace = true }
tracing-core = { workspace = true }

orml-oracle-rpc            = { workspace = true }
substrate-frame-rpc-system = { workspace = true }
substrate-prometheus-endpoint = { workspace = true }

sp-api              = { workspace = true, features = ["std"] }
sp-block-builder    = { workspace = true, features = ["std"] }
sp-blockchain       = { workspace = true }
sp-consensus        = { workspace = true }
sp-consensus-aura   = { workspace = true, features = ["std"] }
sp-core             = { workspace = true, features = ["std"] }
sp-inherents        = { workspace = true, features = ["std"] }
sp-keystore         = { workspace = true }
sp-offchain         = { workspace = true, features = ["std"] }
sp-runtime          = { workspace = true, features = ["std"] }
sp-session          = { workspace = true, features = ["std"] }
sp-std              = { workspace = true, features = ["std"] }
sp-storage          = { workspace = true }
sp-timestamp        = { workspace = true }
sp-transaction-pool = { workspace = true, features = ["std"] }
sp-trie             = { workspace = true }
sp-io               = { workspace = true, features = ["std"], optional = true }

cumulus-client-cli                      = { workspace = true }
cumulus-client-collator                 = { workspace = true }
cumulus-client-consensus-aura           = { workspace = true }
cumulus-client-network                  = { workspace = true }
cumulus-client-service                  = { workspace = true }
cumulus-primitives-core                 = { workspace = true, features = ["std"] }
cumulus-primitives-parachain-inherent   = { workspace = true }
cumulus-relay-chain-inprocess-interface = { workspace = true }
cumulus-relay-chain-interface           = { workspace = true }
cumulus-relay-chain-rpc-interface       = { workspace = true }
cumulus-client-consensus-common         = { workspace = true }
cumulus-client-consensus-relay-chain    = { workspace = true }
cumulus-relay-chain-minimal-node        = { workspace = true }

polkadot-cli        = { workspace = true, features = ['kusama-native'] }
polkadot-parachain  = { workspace = true, features = ["std"] }
polkadot-primitives = { workspace = true }
polkadot-service    = { workspace = true }

# Frontier dependencies
fc-consensus = { workspace = true }
fc-db = { workspace = true }
fc-mapping-sync = { workspace = true }
fc-rpc = { workspace = true, features = ["rpc-binary-search-estimate"] }
fc-rpc-core = { workspace = true }
fp-consensus = { workspace = true }
fp-evm = { workspace = true }
fp-storage = { workspace = true }
fp-dynamic-fee = { workspace = true }
fp-rpc                          = { workspace = true, features = ["std"] }
fp-self-contained               = { workspace = true, features = ["std"] }
pallet-base-fee                 = { workspace = true, features = ["std"] }
pallet-ethereum                 = { workspace = true, features = ['forbid-evm-reentrancy','std']}
pallet-evm                      = { workspace = true, features = ['forbid-evm-reentrancy','std']}


[build-dependencies]
substrate-build-script-utils = { workspace = true }

[[bin]]
name = 'parallel'

[features]
default            = ['std']
runtime-benchmarks = [
  'parallel-runtime/runtime-benchmarks',
  'heiko-runtime/runtime-benchmarks',
  'vanilla-runtime/runtime-benchmarks',
  'kerria-runtime/runtime-benchmarks',
  'polkadot-service/runtime-benchmarks',
  "try-runtime-cli",
]
std                = []
try-runtime        = [
  'heiko-runtime/try-runtime',
  'parallel-runtime/try-runtime',
  'vanilla-runtime/try-runtime',
  'kerria-runtime/try-runtime',
  'polkadot-service/try-runtime',
  'try-runtime-cli/try-runtime',
  'sp-io',
]
